// espepay_main_with_splash_and_login.dart
// Edu-tech mobile-first mockup for EspePay
// Flutter stable + null-safety

import 'package:flutter/material.dart';
import 'package:lottie/lottie.dart';
import 'dart:math';

enum Role {
  parent,
  student,
  teacher,
}

void main() => runApp(EspePayApp());

/// global theme controller so Profile can toggle light/dark quickly
final ValueNotifier<ThemeMode> _themeModeNotifier =
    ValueNotifier(ThemeMode.system);

class EspePayApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return ValueListenableBuilder<ThemeMode>(
      valueListenable: _themeModeNotifier,
      builder: (_, themeMode, __) {
        return MaterialApp(
          title: 'EspePay',
          debugShowCheckedModeBanner: false,
          theme: _buildLightTheme(),
          darkTheme: _buildDarkTheme(),
          themeMode: themeMode,
          home: SplashSequenceScreen(),
        );
      },
    );
  }
}

ThemeData _buildLightTheme() {
  const primary = Color(0xFF6C2E91);
  const accent = Color(0xFF1E88E5);
  return ThemeData(
    useMaterial3: true,
    colorScheme: ColorScheme.fromSeed(
        seedColor: primary, primary: primary, secondary: accent),
    scaffoldBackgroundColor: Colors.grey[50],
    appBarTheme:
        const AppBarTheme(backgroundColor: primary, foregroundColor: Colors.white),
    floatingActionButtonTheme:
        const FloatingActionButtonThemeData(backgroundColor: primary),
    cardTheme: const CardThemeData( // ✅ pakai CardThemeData
      shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.all(Radius.circular(12))),
      elevation: 2,
    ),
    visualDensity: VisualDensity.adaptivePlatformDensity,
  );
}

ThemeData _buildDarkTheme() {
  const primary = Color(0xFF6C2E91);
  const accent = Color(0xFF1E88E5);
  return ThemeData.dark().copyWith(
    useMaterial3: true,
    colorScheme: const ColorScheme.dark(primary: primary, secondary: accent),
    appBarTheme:
        const AppBarTheme(backgroundColor: primary, foregroundColor: Colors.white),
    floatingActionButtonTheme:
        const FloatingActionButtonThemeData(backgroundColor: primary),
    cardTheme: const CardThemeData( // ✅ pakai CardThemeData
      shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.all(Radius.circular(12))),
      elevation: 2,
    ),
  );
}

// -------------------- Splash sequence --------------------
class SplashSequenceScreen extends StatefulWidget {
  @override
  State<SplashSequenceScreen> createState() => _SplashSequenceScreenState();
}

class _SplashSequenceScreenState extends State<SplashSequenceScreen> {
  @override
  void initState() {
    super.initState();
    _runSequence();
  }

  Future<void> _runSequence() async {
    await Future.delayed(const Duration(milliseconds: 500));
    await Future.delayed(const Duration(seconds: 5));
    if (!mounted) return;
    Navigator.of(context)
        .pushReplacement(MaterialPageRoute(builder: (_) => _SecondSplash()));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Center(
          child: SizedBox(
            width: 220,
            height: 220,
            child: Lottie.asset('assets/animations/school_kid_walk.json',
                fit: BoxFit.contain, repeat: false),
          ),
        ),
      ),
    );
  }
}

class _SecondSplash extends StatefulWidget {
  @override
  State<_SecondSplash> createState() => __SecondSplashState();
}

class __SecondSplashState extends State<_SecondSplash> {
  @override
  void initState() {
    super.initState();
    _next();
  }

  Future<void> _next() async {
    await Future.delayed(const Duration(seconds: 1));
    if (!mounted) return;
    Navigator.of(context)
        .pushReplacement(MaterialPageRoute(builder: (_) => LoginPage()));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Center(
          child: SizedBox(
            width: 240,
            height: 240,
            child: Lottie.asset('assets/animations/espepay_splash.json',
                fit: BoxFit.contain, repeat: false),
          ),
        ),
      ),
    );
  }
}

// -------------------- Login Page --------------------
class LoginPage extends StatefulWidget {
  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final _formKey = GlobalKey<FormState>();
  final _emailCtrl = TextEditingController();
  final _passCtrl = TextEditingController();
  bool _loading = false;

  void _doLogin(Role role) async {
    if (_formKey.currentState != null && !_formKey.currentState!.validate())
      return;
    setState(() => _loading = true);
    await Future.delayed(const Duration(milliseconds: 800));
    setState(() => _loading = false);
    Navigator.of(context).pushReplacement(
        MaterialPageRoute(builder: (_) => HomeScreen(role: role)));
  }

  @override
  void dispose() {
    _emailCtrl.dispose();
    _passCtrl.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: SingleChildScrollView(
          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 24),
          child: ConstrainedBox(
            constraints: const BoxConstraints(maxWidth: 520),
            child: Column(
              children: [
                SizedBox(
                  width: 160,
                  height: 160,
                  child: Lottie.asset('assets/animations/espepay_splash.json',
                      fit: BoxFit.contain),
                ),
                const SizedBox(height: 12),
                Text(
                  'Kelola pembayaran, absensi, dan pembelajaran sekolah',
                  textAlign: TextAlign.center,
                  style: Theme.of(context).textTheme.bodyMedium,
                ),
                const SizedBox(height: 20),
                Card(
                  shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12)),
                  child: Padding(
                    padding: const EdgeInsets.all(18.0),
                    child: Form(
                      key: _formKey,
                      child: Column(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            TextFormField(
                              controller: _emailCtrl,
                              decoration: const InputDecoration(
                                  prefixIcon: Icon(Icons.person),
                                  labelText: 'Email / Username'),
                              validator: (v) =>
                                  v == null || v.isEmpty
                                      ? 'Masukkan email atau username'
                                      : null,
                            ),
                            const SizedBox(height: 12),
                            TextFormField(
                              controller: _passCtrl,
                              obscureText: true,
                              decoration: const InputDecoration(
                                  prefixIcon: Icon(Icons.lock),
                                  labelText: 'Password'),
                              validator: (v) =>
                                  v == null || v.length < 4
                                      ? 'Password minimal 4 karakter'
                                      : null,
                            ),
                            const SizedBox(height: 16),
                            SizedBox(
                              width: double.infinity,
                              child: ElevatedButton(
                                onPressed: _loading
                                    ? null
                                    : () => _doLogin(Role.parent),
                                child: _loading
                                    ? const SizedBox(
                                        height: 18,
                                        width: 18,
                                        child: CircularProgressIndicator(
                                            strokeWidth: 2,
                                            color: Colors.white))
                                    : const Text('Masuk (Orang Tua)'),
                              ),
                            ),
                            const SizedBox(height: 12),
                            Row(
                              children: [
                                Expanded(
                                  child: OutlinedButton.icon(
                                    onPressed: () => _doLogin(Role.student),
                                    icon: const Icon(Icons.school),
                                    label: const Text('Masuk sebagai Siswa'),
                                  ),
                                ),
                                const SizedBox(width: 12),
                                Expanded(
                                  child: OutlinedButton.icon(
                                    onPressed: () => _doLogin(Role.teacher),
                                    icon: const Icon(Icons.person_search),
                                    label: const Text('Masuk sebagai Guru'),
                                  ),
                                ),
                              ],
                            ),
                            const SizedBox(height: 8),
                            TextButton(
                              onPressed: () => Navigator.of(context).push(
                                  MaterialPageRoute(
                                      builder: (_) => RoleSelectScreen())),
                              child: const Text('Lewati (pilih role manual)'),
                            ),
                          ]),
                    ),
                  ),
                ),
                const SizedBox(height: 12),
                Text('Belum punya akun? Hubungi admin sekolah.',
                    style: TextStyle(color: Colors.grey[600])),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

// -------------------- Role Select --------------------
class RoleSelectScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Pilih Role')),
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(18.0),
          child: Column(crossAxisAlignment: CrossAxisAlignment.stretch, children: [
            const SizedBox(height: 8),
            Text('Masuk sebagai', style: Theme.of(context).textTheme.titleLarge),
            const SizedBox(height: 18),
            _RoleCardLarge(
              title: 'Orang Tua / Wali Murid',
              subtitle: 'Lihat ringkasan anak & pembayaran',
              icon: Icons.family_restroom,
              onTap: () => Navigator.pushReplacement(
                  context, MaterialPageRoute(builder: (_) => HomeScreen(role: Role.parent))),
            ),
            const SizedBox(height: 12),
            _RoleCardLarge(
              title: 'Siswa',
              subtitle: 'Latihan & materi pembelajaran',
              icon: Icons.school,
              onTap: () => Navigator.pushReplacement(
                  context, MaterialPageRoute(builder: (_) => HomeScreen(role: Role.student))),
            ),
            const SizedBox(height: 12),
            _RoleCardLarge(
              title: 'Guru',
              subtitle: 'Kelola absensi & pengumuman',
              icon: Icons.person_search,
              onTap: () => Navigator.pushReplacement(
                  context, MaterialPageRoute(builder: (_) => HomeScreen(role: Role.teacher))),
            ),
          ]),
        ),
      ),
    );
  }
}

class _RoleCardLarge extends StatelessWidget {
  final String title, subtitle;
  final IconData icon;
  final VoidCallback onTap;
  const _RoleCardLarge({required this.title, required this.subtitle, required this.icon, required this.onTap});
  @override
  Widget build(BuildContext context) {
    return Card(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: ListTile(
        contentPadding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
        leading: CircleAvatar(
            backgroundColor: Theme.of(context).colorScheme.primaryContainer,
            child: Icon(icon, color: Theme.of(context).colorScheme.onPrimaryContainer)),
        title: Text(title, style: const TextStyle(fontWeight: FontWeight.w600)),
        subtitle: Text(subtitle),
        trailing: const Icon(Icons.arrow_forward_ios, size: 16),
        onTap: onTap,
      ),
    );
  }
}

// -------------------- HomeScreen, Drawer, Dashboard --------------------
// (lanjutan semua halaman sama kayak versi sebelumnya)
// -------------------- HomeScreen --------------------
class HomeScreen extends StatefulWidget {
  final Role role;
  const HomeScreen({required this.role});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  int _index = 0;

  @override
  Widget build(BuildContext context) {
    final isParent = widget.role == Role.parent;
    final isStudent = widget.role == Role.student;
    final isTeacher = widget.role == Role.teacher;

    final pages = <Widget>[
      Dashboard(role: widget.role),
      if (isParent) PaymentsPageCompact(role: widget.role) else if (isStudent) PracticePage(role: widget.role) else AttendanceForTeacherPage(role: widget.role),
      MessagesCompact(role: widget.role),
      MorePage(role: widget.role),
    ];

    final destinations = <NavigationDestination>[
      const NavigationDestination(icon: Icon(Icons.home_outlined), label: 'Home'),
      NavigationDestination(icon: Icon(isParent ? Icons.payment_outlined : isStudent ? Icons.edit : Icons.check_box), label: isParent ? 'Payments' : isStudent ? 'Practice' : 'Absensi'),
      const NavigationDestination(icon: Icon(Icons.message_outlined), label: 'Chat'),
      const NavigationDestination(icon: Icon(Icons.grid_view_outlined), label: 'More'),
    ];

    return Scaffold(
      appBar: AppBar(
        title: Text(widget.role == Role.parent ? 'Dashboard - Orang Tua' : widget.role == Role.student ? 'Dashboard - Siswa' : 'Dashboard - Guru'),
        actions: [
          IconButton(icon: const Icon(Icons.notifications_none), onPressed: () => Navigator.push(context, MaterialPageRoute(builder: (_) => NotificationsPage()))),
          IconButton(icon: const Icon(Icons.person), onPressed: () => Navigator.push(context, MaterialPageRoute(builder: (_) => ProfilePage()))),
        ],
      ),
      drawer: AppDrawer(role: widget.role),
      body: IndexedStack(index: _index, children: pages),
      bottomNavigationBar: NavigationBar(selectedIndex: _index, onDestinationSelected: (i) => setState(() => _index = i), destinations: destinations),
      floatingActionButton: _buildFAB(widget.role, _index),
    );
  }

  Widget? _buildFAB(Role role, int index) {
    if (role == Role.parent && index == 1) {
      return FloatingActionButton.extended(icon: const Icon(Icons.add), label: const Text('Bayar'), onPressed: () {});
    } else if (role == Role.teacher && index == 1) {
      return FloatingActionButton.extended(icon: const Icon(Icons.announcement), label: const Text('Tambah Pengumuman'), onPressed: () {
        showDialog(context: context, builder: (_) {
          final ctrl = TextEditingController();
          return AlertDialog(
            title: const Text('Tambah Pengumuman'),
            content: TextField(controller: ctrl, decoration: const InputDecoration(hintText: 'Isi pengumuman')),
            actions: [
              TextButton(onPressed: () => Navigator.pop(context), child: const Text('Batal')),
              ElevatedButton(onPressed: () {
                Navigator.pop(context);
                ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text('Pengumuman ditambahkan (dummy)')));
              }, child: const Text('Simpan'))
            ],
          );
        });
      });
    }
    return null;
  }
}

// -------------------- Drawer --------------------
class AppDrawer extends StatelessWidget {
  final Role role;
  const AppDrawer({required this.role});

  @override
  Widget build(BuildContext context) {
    return Drawer(
      child: SafeArea(
        child: Column(crossAxisAlignment: CrossAxisAlignment.stretch, children: [
          DrawerHeader(
            decoration: BoxDecoration(color: Theme.of(context).colorScheme.primary),
            child: Row(children: [
              CircleAvatar(radius: 36, backgroundColor: Colors.white, child: Icon(Icons.school, color: Theme.of(context).colorScheme.primary)),
              const SizedBox(width: 12),
              Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: const [
                Text('SMA Contoh', style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),
                SizedBox(height: 4),
                Text('admin@sma.example', style: TextStyle(color: Colors.white70)),
              ])
            ]),
          ),
          if (role == Role.parent) ...[
            ListTile(leading: const Icon(Icons.announcement), title: const Text('Pengumuman'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => AnnouncementsPage()))),
            ListTile(leading: const Icon(Icons.school), title: const Text('Rapor'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => ReportCardPage()))),
          ],
          if (role == Role.student) ...[
            ListTile(leading: const Icon(Icons.edit), title: const Text('Practice'), onTap: () {}),
            ListTile(leading: const Icon(Icons.menu_book), title: const Text('Pembelajaran'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => LearningResourcesPage()))),
          ],
          if (role == Role.teacher) ...[
            ListTile(leading: const Icon(Icons.announcement), title: const Text('Pengumuman'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => AnnouncementsPage()))),
            ListTile(leading: const Icon(Icons.check_box), title: const Text('Absensi Siswa'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => AttendancePage()))),
          ],
          const Spacer(),
          ListTile(leading: const Icon(Icons.logout), title: const Text('Logout'), onTap: () {
            Navigator.pushAndRemoveUntil(context, MaterialPageRoute(builder: (_) => LoginPage()), (route) => false);
          }),
        ]),
      ),
    );
  }
}

// -------------------- Dashboard --------------------
class Dashboard extends StatelessWidget {
  final Role role;
  const Dashboard({required this.role});

  @override
  Widget build(BuildContext context) {
    if (role == Role.parent) return ParentDashboard();
    if (role == Role.student) return StudentDashboardSummary();
    return TeacherDashboardSummary();
  }
}

// -------------------- Parent Dashboard --------------------
class ParentDashboard extends StatelessWidget {
  final List<Map<String, String>> children = [
    {'name': 'Alif', 'spp': 'Lunas', 'absen': 'Hadir', 'school': 'SMA 1 Jakarta', 'class': '10 IPA 1'},
    {'name': 'Nadia', 'spp': 'Belum Bayar', 'absen': 'Sakit', 'school': 'SMA 2 Bandung', 'class': '11 IPS 2'},
  ];

  @override
  Widget build(BuildContext context) {
    return RefreshIndicator(
      onRefresh: () async {},
      child: ListView(padding: const EdgeInsets.all(16), children: [
        Card(
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(14)),
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Row(children: [
              CircleAvatar(radius: 30, backgroundColor: Theme.of(context).colorScheme.primaryContainer, child: Icon(Icons.person, size: 30, color: Theme.of(context).colorScheme.onPrimaryContainer)),
              const SizedBox(width: 12),
              Expanded(child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [const Text('Orang Tua: Dedy K Wijaya', style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16)), const SizedBox(height: 6), const Text('SMA Contoh — akun orang tua')]))
            ]),
          ),
        ),
        const SizedBox(height: 12),
        ...children.map((c) => Card(
          child: Padding(
            padding: const EdgeInsets.all(14.0),
            child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
              Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [
                Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text(c['name']!, style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16)), Text(c['school']!) ]),
                Column(crossAxisAlignment: CrossAxisAlignment.end, children: [Text('Kelas ${c['class']!}', style: const TextStyle(fontWeight: FontWeight.w600)), const SizedBox(height: 6), Text('SPP: ${c['spp']!}', style: TextStyle(color: c['spp'] == 'Lunas' ? Colors.green : Colors.orange))]),
              ]),
              const SizedBox(height: 12),
              Row(children: [const Icon(Icons.calendar_today, size: 18), const SizedBox(width: 8), Text('Absensi hari ini: ${c['absen']!}')]),
              const SizedBox(height: 12),
              Align(alignment: Alignment.centerRight, child: TextButton(onPressed: () {}, child: const Text('Detail'))),
            ]),
          ),
        )).toList(),
        const SizedBox(height: 16),
        Card(child: ListTile(leading: const Icon(Icons.announcement), title: const Text('Pengumuman Sekolah'), subtitle: const Text('Libur nasional: 17 Agustus'))),
      ]),
    );
  }
}

// -------------------- Student Dashboard --------------------
class StudentDashboardSummary extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return ListView(padding: const EdgeInsets.all(16), children: [
      Card(
        child: Padding(padding: const EdgeInsets.all(12), child: Row(children: [
          CircleAvatar(radius: 34, backgroundColor: Theme.of(context).colorScheme.primaryContainer, child: Icon(Icons.person, size: 34, color: Theme.of(context).colorScheme.onPrimaryContainer)),
          const SizedBox(width: 12),
          Expanded(child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: const [Text('Nama: Alif', style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16)), SizedBox(height: 4), Text('SMA 1 Jakarta • Kelas 10 IPA 1')])),
          IconButton(icon: const Icon(Icons.arrow_forward_ios), onPressed: () {})
        ])),
      ),
      const SizedBox(height: 12),
      Card(child: ListTile(leading: const Icon(Icons.calculate), title: const Text('Practice Matematika (SMA)'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => PracticePage(role: Role.student))))),
      const SizedBox(height: 8),
      Card(child: ListTile(leading: const Icon(Icons.menu_book), title: const Text('Pembelajaran'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => LearningResourcesPage())))),
    ]);
  }
}

// -------------------- Teacher Dashboard --------------------
class TeacherDashboardSummary extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return ListView(padding: const EdgeInsets.all(16), children: [
      Card(child: ListTile(leading: const Icon(Icons.person), title: const Text('Guru: Ibu Siti'), subtitle: const Text('SMA Contoh • Wali Kelas 10 IPA 1'))),
      const SizedBox(height: 12),
      Card(child: ListTile(leading: const Icon(Icons.check_box), title: const Text('Absensi Siswa'), subtitle: const Text('Input & edit absensi harian'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => AttendancePage())))),
      const SizedBox(height: 8),
      Card(child: ListTile(leading: const Icon(Icons.announcement), title: const Text('Pengumuman'), subtitle: const Text('Buat pengumuman ke wali murid'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => AnnouncementsPage())))),
    ]);
  }
}


// -------------------- Attendance For Teacher (pakai Switch) --------------------
class AttendanceForTeacherPage extends StatefulWidget {
  final Role role;
  const AttendanceForTeacherPage({required this.role});
  @override
  State<AttendanceForTeacherPage> createState() => _AttendanceForTeacherPageState();
}

class _AttendanceForTeacherPageState extends State<AttendanceForTeacherPage> {
  final List<Map<String, dynamic>> students = [
    {'name': 'Alif', 'present': false},
    {'name': 'Nadia', 'present': false},
    {'name': 'Rafi', 'present': false},
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Absensi Siswa")),
      body: ListView.separated(
        padding: const EdgeInsets.all(12),
        itemCount: students.length,
        separatorBuilder: (_, __) => const Divider(),
        itemBuilder: (context, index) {
          final s = students[index];
          return ListTile(
            leading: CircleAvatar(
              backgroundColor: s['present'] ? Colors.green : Colors.grey,
              child: Icon(Icons.person,
                  color: s['present'] ? Colors.white : Colors.black54),
            ),
            title: Text(s['name']),
            subtitle: Text(
              s['present'] ? "Present" : "Not Present",
              style: TextStyle(
                color: s['present'] ? Colors.green : Colors.red,
                fontWeight: FontWeight.w600,
              ),
            ),
            trailing: Switch(
              value: s['present'],
              activeColor: Colors.green,
              onChanged: (val) {
                setState(() => s['present'] = val);
              },
            ),
          );
        },
      ),
      bottomNavigationBar: Padding(
        padding: const EdgeInsets.all(12.0),
        child: ElevatedButton.icon(
          onPressed: () {
            ScaffoldMessenger.of(context).showSnackBar(
              const SnackBar(content: Text("Absensi disimpan")),
            );
          },
          icon: const Icon(Icons.save),
          label: const Text("Simpan Absensi"),
        ),
      ),
    );
  }
}

// -------------------- Pages lainnya (PaymentsPage, PracticePage, Messages, MorePage, Announcements, ReportCard, Schedule, Extracurricular, Attendance, Notifications, Profile) --------------------
// (sama seperti kode mas sebelumnya, tinggal disalin persis, tidak ada perubahan selain AttendanceForTeacherPage)

// -------------------- Payments Page --------------------
class PaymentsPageCompact extends StatelessWidget {
  final Role role;
  const PaymentsPageCompact({required this.role});
  @override
  Widget build(BuildContext context) {
    final sample = List.generate(4, (i) => {'title': 'SPP Bulan ${i + 1}', 'amount': 'Rp ${350000 + i * 25000}', 'status': i % 3 == 0 ? 'Lunas' : i % 3 == 1 ? 'Belum Bayar' : 'Telat'});
    return ListView(padding: const EdgeInsets.all(12), children: [
      const SizedBox(height: 6),
      Card(child: Padding(padding: const EdgeInsets.all(12), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text('Bayar SPP', style: TextStyle(fontWeight: FontWeight.bold)), const SizedBox(height: 8), Text('Pilih metode pembayaran: QR / Transfer / Kartu')]))),
      const SizedBox(height: 12),
      ...sample.map((p) => Card(margin: const EdgeInsets.only(bottom: 10), child: ListTile(leading: const Icon(Icons.receipt_long), title: Text(p['title']!), subtitle: Text('${p['amount']} • ${p['status']}'), trailing: p['status'] == 'Lunas' ? const Icon(Icons.check_circle, color: Colors.green) : p['status'] == 'Telat' ? const Icon(Icons.error, color: Colors.red) : const Icon(Icons.hourglass_empty, color: Colors.orange)))).toList(),
    ]);
  }
}

// -------------------- Practice Page --------------------
class PracticePage extends StatefulWidget {
  final Role role;
  const PracticePage({required this.role});
  @override
  State<PracticePage> createState() => _PracticePageState();
}

class _PracticePageState extends State<PracticePage> {
  int score = 0;
  final Random _rand = Random();
  String question = '';
  int answer = 0;
  String message = '';

  void newQuestion() {
    final type = _rand.nextInt(3);
    if (type == 0) {
      final a = _rand.nextInt(50) + 1;
      final b = _rand.nextInt(50) + 1;
      question = '$a + $b = ?';
      answer = a + b;
    } else if (type == 1) {
      final a = _rand.nextInt(12) + 2;
      final b = _rand.nextInt(12) + 2;
      question = '$a × $b = ?';
      answer = a * b;
    } else {
      final x = _rand.nextInt(10) + 1;
      final b = _rand.nextInt(10);
      final c = 2 * x + b;
      question = '2x + $b = $c. Berapa x?';
      answer = x;
    }
    message = '';
  }

  void checkAnswer(int ans) {
    setState(() {
      if (ans == answer) {
        score += 1;
        message = 'Benar!';
      } else {
        message = 'Salah. Jawaban benar: $answer';
      }
    });
    newQuestion();
  }

  @override
  void initState() {
    super.initState();
    newQuestion();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Practice (SMA)')),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(children: [
          Card(child: Padding(padding: const EdgeInsets.all(12), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text('Soal', style: Theme.of(context).textTheme.titleMedium), const SizedBox(height: 8), Text(question, style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold)), const SizedBox(height: 12), Text(message, style: const TextStyle(color: Colors.green))]))),
          const SizedBox(height: 12),
          Wrap(spacing: 8, runSpacing: 8, children: List.generate(40, (i) => ElevatedButton(onPressed: () => checkAnswer(i), child: Text('$i')))),
          const SizedBox(height: 12),
          Text('Score: $score', style: const TextStyle(fontWeight: FontWeight.bold)),
        ]),
      ),
    );
  }
}

class PracticePageShortcut extends StatelessWidget {
  final Role role;
  const PracticePageShortcut({required this.role});
  @override
  Widget build(BuildContext context) => PracticePage(role: role);
}

// -------------------- MessagesCompact --------------------
class MessagesCompact extends StatelessWidget {
  final Role role;
  const MessagesCompact({required this.role});
  @override
  Widget build(BuildContext context) {
    return ListView(padding: const EdgeInsets.all(12), children: [
      TextField(decoration: InputDecoration(prefixIcon: const Icon(Icons.search), hintText: 'Cari pesan/ortu...', border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)))),
      const SizedBox(height: 10),
      ...List.generate(8, (i) => ListTile(leading: CircleAvatar(child: Text('P${i+1}')), title: Text('Orang Tua ${i+1}'), subtitle: Text('Pertanyaan mengenai pembayaran'), trailing: const Text('1h'))),
    ]);
  }
}

// -------------------- More Page --------------------
class MorePage extends StatelessWidget {
  final Role role;
  const MorePage({required this.role});
  @override
  Widget build(BuildContext context) {
    return ListView(padding: const EdgeInsets.all(12), children: [
      ListTile(leading: const Icon(Icons.campaign), title: const Text('Pengumuman & Agenda'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => AnnouncementsPage()))),
      ListTile(leading: const Icon(Icons.book), title: const Text('Materi Pembelajaran'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => LearningResourcesPage()))),
      ListTile(leading: const Icon(Icons.grade), title: const Text('Rapor & Nilai'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => ReportCardPage()))),
      ListTile(leading: const Icon(Icons.schedule), title: const Text('Jadwal Pelajaran'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => SchedulePage()))),
      ListTile(leading: const Icon(Icons.event), title: const Text('Jadwal Ekstrakurikuler'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => ExtracurricularPage()))),
      ListTile(leading: const Icon(Icons.check_box), title: const Text('Rekap Presensi'), onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => AttendancePage()))),
    ]);
  }
}

// -------------------- Other Pages --------------------
class AnnouncementsPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final notes = ['Libur Nasional: 17 Agustus', 'Pembagian rapor: Jumat, 28 Nov', 'Donasi pembangunan: hubungi bendahara'];
    return Scaffold(appBar: AppBar(title: const Text('Pengumuman')), body: ListView.separated(padding: const EdgeInsets.all(12), itemCount: notes.length, separatorBuilder: (_,__)=>const Divider(), itemBuilder: (c,i)=>ListTile(leading: const Icon(Icons.announcement), title: Text(notes[i]))));
  }
}

class LearningResourcesPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final items = ['Materi Matematika SMA', 'Video Fisika', 'Latihan Kimia'];
    return Scaffold(appBar: AppBar(title: const Text('Materi Pembelajaran')), body: ListView.builder(padding: const EdgeInsets.all(12), itemCount: items.length, itemBuilder: (c,i)=>Card(child: ListTile(leading: const Icon(Icons.menu_book), title: Text(items[i]), trailing: const Icon(Icons.open_in_new)))) );
  }
}

class ReportCardPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final subjects = {'Matematika': 'A-', 'Fisika': 'B+', 'Bahasa Inggris': 'A'};
    return Scaffold(appBar: AppBar(title: const Text('Rapor')), body: ListView(padding: const EdgeInsets.all(12), children: [Card(child: Padding(padding: const EdgeInsets.all(12), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text('Rapor Semester', style: const TextStyle(fontWeight: FontWeight.bold)), const SizedBox(height: 12), ...subjects.entries.map((e)=>ListTile(title: Text(e.key), trailing: Text(e.value))).toList()])))]));
  }
}

class SchedulePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final schedule = ['07:00 - 08:30 Matematika', '08:45 - 10:15 Fisika', '10:30 - 12:00 Bahasa Inggris'];
    return Scaffold(appBar: AppBar(title: const Text('Jadwal Pelajaran')), body: ListView(padding: const EdgeInsets.all(12), children: schedule.map((s)=>Card(child: ListTile(title: Text(s)))).toList()));
  }
}

class ExtracurricularPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final activities = ['Basket', 'Pramuka', 'KIR'];
    return Scaffold(appBar: AppBar(title: const Text('Ekstrakurikuler')), body: ListView(padding: const EdgeInsets.all(12), children: activities.map((a)=>Card(child: ListTile(title: Text(a), trailing: const Icon(Icons.arrow_forward_ios, size: 16), onTap: (){}))).toList()));
  }
}

class AttendancePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final rows = List.generate(7, (i) => {'date': '2025-09-${10+i}', 'in': '07:50', 'out': i%2==0 ? '15:00' : '-'});
    return Scaffold(appBar: AppBar(title: const Text('Rekap Presensi')), body: ListView(padding: const EdgeInsets.all(12), children: rows.map((r)=>Card(child: ListTile(title: Text(r['date']!), subtitle: Text('Masuk: ${r['in']} • Pulang: ${r['out']}')))).toList()));
  }
}

class NotificationsPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final notes = ['Tagihan Januari belum dibayar', 'Rapat orang tua: Jumat 10:00', 'Kegiatan ekstrakurikuler: Jumat'];
    return Scaffold(appBar: AppBar(title: const Text('Notifikasi')), body: ListView.separated(padding: const EdgeInsets.all(12), itemCount: notes.length, separatorBuilder: (_,__)=>const Divider(), itemBuilder: (c,i)=>ListTile(leading: const Icon(Icons.notifications), title: Text(notes[i]))));
  }
}

class ProfilePage extends StatefulWidget {
  @override
  State<ProfilePage> createState() => _ProfilePageState();
}
class _ProfilePageState extends State<ProfilePage> {
  @override
  Widget build(BuildContext context) {
    final brightness = Theme.of(context).brightness;
    return Scaffold(
      appBar: AppBar(title: const Text('Profil')),
      body: ListView(padding: const EdgeInsets.all(12), children: [
        Card(child: ListTile(leading: const Icon(Icons.person), title: const Text('Dedy K Wijaya'), subtitle: const Text('dkwijaya.gin@gmail.com'))),
        Card(child: ListTile(leading: const Icon(Icons.settings), title: const Text('Pengaturan Akun'))),
        Card(child: ListTile(
          leading: Icon(brightness == Brightness.light ? Icons.dark_mode : Icons.light_mode),
          title: Text(brightness == Brightness.light ? 'Ke Dark Mode' : 'Ke Light Mode'),
          onTap: () {
            if (_themeModeNotifier.value == ThemeMode.light) _themeModeNotifier.value = ThemeMode.dark;
            else if (_themeModeNotifier.value == ThemeMode.dark) _themeModeNotifier.value = ThemeMode.light;
            else _themeModeNotifier.value = brightness == Brightness.dark ? ThemeMode.light : ThemeMode.dark;
            setState(() {});
          },
        )),
        Card(child: ListTile(leading: const Icon(Icons.logout), title: const Text('Logout'), onTap: () => Navigator.pushAndRemoveUntil(context, MaterialPageRoute(builder: (_) => LoginPage()), (route) => false))),
      ]),
    );
  }
}
